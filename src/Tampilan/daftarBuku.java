/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Tampilan;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author achmad-pc
 */
public class daftarBuku extends javax.swing.JDialog {

    /**
     * Creates new form daftarBuku
     */
    DefaultTableModel dtm;
    PreparedStatement preparedStatement;
    private Integer id;
    Connection conec;
    Statement state;
    ResultSet res;
    String database;
    
    
    public DefaultTableModel modelBuku = new  DefaultTableModel();
    
    

   public daftarBuku() {
        
    }
   
   public void data(){
       try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_perpustakaan", "root", "");
            Statement statement = connection.createStatement();
            ResultSet res = statement.executeQuery("select * from buku order by kode_buku DESC");
            if(res.next()){
                String kd = res.getString("kode_buku").substring(1);
                String kode = "00" + (Integer.parseInt(kd)+1);
                kdBuku.setText("B"+kode);
            }else{
                kdBuku.setText("B001");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(daftarBuku.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(daftarBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
   
   }
    
    public void tampilTable(){
        modelBuku.setRowCount(0);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_perpustakaan", "root", "");
            Statement statement = connection.createStatement();
            ResultSet res = statement.executeQuery("select * from buku");
            String[] kolom = {"Kode Buku","Judul Buku","Penulis Buku","Penerbit Buku","Tahun Terbit","Stok"};
            modelBuku.setColumnIdentifiers(kolom);
            while(res.next()){
            Object[] data = new Object[6];
            data[0] = res.getString("kode_buku");
            data[1] = res.getString("judul_buku");
            data[2] = res.getString("penulis_buku");
            data[3] = res.getString("penerbit_buku");
            data[4] = res.getString("tahun_terbit");
            data[5] = res.getString("stok");
          
            modelBuku.addRow(data);
            
            
        }
        
    }   catch (ClassNotFoundException ex) {
            Logger.getLogger(daftarBuku.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(daftarBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void clear(){
        kdBuku.setText("");
        jlbuku.setText("");
        psBuku.setText("");
        pnBuku.setText("");
        ttbuku.setText("");
        sbuku.setText("");
        tableBuku.clearSelection();
    }
    
    public void dead(){
            kdBuku.setEditable(false);
            jlbuku.setEditable(false);
            psBuku.setEditable(false);
            pnBuku.setEditable(false);
            ttbuku.setEditable(false);
            sbuku.setEditable(false);
            cancel.setEnabled(false);
            jbedit.setEnabled(false);
            hapus.setEnabled(false);
    }
    
//    public void hapus(String kode_buku) throws SQLException{
//        String sql = "DELETE FROM buku WHERE kode_buku = '"+kode_buku+"'";
//        state.executeUpdate(sql);
//    }
    public daftarBuku(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
        tampilTable();
        tableBuku.setModel(modelBuku);
        dead();
        data();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        kdBuku = new javax.swing.JTextField();
        jlbuku = new javax.swing.JTextField();
        psBuku = new javax.swing.JTextField();
        pnBuku = new javax.swing.JTextField();
        ttbuku = new javax.swing.JTextField();
        sbuku = new javax.swing.JTextField();
        simpan = new com.k33ptoo.components.KButton();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBuku = new javax.swing.JTable();
        hapus = new com.k33ptoo.components.KButton();
        jbedit = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        FS = new javax.swing.JTextField();
        Cari = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Daftar Buku");

        jPanel1.setBackground(new java.awt.Color(188, 206, 251));

        jPanel2.setBackground(new java.awt.Color(24, 119, 242));

        jLabel1.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Daftar Buku");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(14, 14, 14))
        );

        kGradientPanel1.setBackground(new java.awt.Color(188, 206, 251));
        kGradientPanel1.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setkStartColor(new java.awt.Color(255, 255, 255));

        kdBuku.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        kdBuku.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Kode Buku", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 12))); // NOI18N
        kdBuku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                kdBukuKeyTyped(evt);
            }
        });

        jlbuku.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jlbuku.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Judul Buku", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 13))); // NOI18N

        psBuku.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        psBuku.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Penulis Buku", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 13))); // NOI18N

        pnBuku.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        pnBuku.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Penerbit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 13))); // NOI18N

        ttbuku.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        ttbuku.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tahun Terbit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 13))); // NOI18N

        sbuku.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        sbuku.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stok", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Black", 1, 13))); // NOI18N

        simpan.setText("SIMPAN");
        simpan.setkBackGroundColor(new java.awt.Color(0, 164, 0));
        simpan.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        simpan.setkHoverStartColor(new java.awt.Color(0, 164, 0));
        simpan.setkSelectedColor(new java.awt.Color(0, 164, 0));
        simpan.setkStartColor(new java.awt.Color(0, 164, 0));
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlbuku, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(kdBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(psBuku)
                            .addComponent(pnBuku)
                            .addComponent(ttbuku)
                            .addComponent(sbuku, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap(228, Short.MAX_VALUE)
                        .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(kdBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlbuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(psBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ttbuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(sbuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        kGradientPanel2.setBackground(new java.awt.Color(188, 206, 251));
        kGradientPanel2.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setkStartColor(new java.awt.Color(255, 255, 255));

        tableBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBuku);

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                .addContainerGap())
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        hapus.setText("HAPUS");
        hapus.setkBackGroundColor(new java.awt.Color(147, 41, 30));
        hapus.setkEndColor(new java.awt.Color(237, 33, 58));
        hapus.setkHoverEndColor(new java.awt.Color(147, 41, 30));
        hapus.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        hapus.setkHoverStartColor(new java.awt.Color(237, 33, 58));
        hapus.setkSelectedColor(new java.awt.Color(147, 41, 30));
        hapus.setkStartColor(new java.awt.Color(237, 33, 58));
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        jbedit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/icons8-edit-32.png"))); // NOI18N
        jbedit.setText("EDIT");
        jbedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbeditActionPerformed(evt);
            }
        });

        tambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/icons8-add-32.png"))); // NOI18N
        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/icons8-cancel-32.png"))); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        FS.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        Cari.setText("Cari");
        Cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(tambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(30, 30, 30)
                                .addComponent(cancel)
                                .addGap(30, 30, 30)
                                .addComponent(jbedit, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(FS, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cari, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cari))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hapus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbedit)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        // TODO add your handling code here:
        if(edit==true){
            try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_perpustakaan", "root", "");
            preparedStatement = connection.prepareStatement("update buku set kode_buku = ?, judul_buku = ?, penulis_buku = ?, penerbit_buku = ?, tahun_terbit = ?, stok = ? where kode_buku = '"+kdBuku.getText()+"'");
            preparedStatement.setString(1, kdBuku.getText());
            preparedStatement.setString(2, jlbuku.getText());
            preparedStatement.setString(3, psBuku.getText());
            preparedStatement.setString(4, pnBuku.getText());
            preparedStatement.setString(5, ttbuku.getText());
            preparedStatement.setInt(6, Integer.parseInt(sbuku.getText()));
            preparedStatement.execute();
            connection.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(daftarBuku.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(daftarBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
            tampilTable();
            clear();
            data();
            kdBuku.setEditable(false);
            jlbuku.setEditable(false);
            psBuku.setEditable(false);
            pnBuku.setEditable(false);
            ttbuku.setEditable(false);
            sbuku.setEditable(false);
            simpan.setEnabled(false);
            cancel.setEnabled(false);
            tambah.setEnabled(true);
        
        }else{
            try{
                Class.forName("com.mysql.jdbc.Driver");
                Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_perpustakaan", "root", "");
                preparedStatement = connection.prepareStatement("insert into buku (kode_buku,judul_buku,penulis_buku,penerbit_buku,tahun_terbit,stok) values (?,?,?,?,?,?)");
                preparedStatement.setString(1, kdBuku.getText());
                preparedStatement.setString(2, jlbuku.getText());
                preparedStatement.setString(3, psBuku.getText());
                preparedStatement.setString(4, pnBuku.getText());
                preparedStatement.setString(5, ttbuku.getText());
                preparedStatement.setInt(6, Integer.parseInt(sbuku.getText()));
                preparedStatement.execute();
                connection.close();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(daftarBuku.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(daftarBuku.class.getName()).log(Level.SEVERE, null, ex);
            }
                tampilTable();
                clear();
                data();
                simpan.setEnabled(false);
                cancel.setEnabled(false);
                tambah.setEnabled(true);            
        kdBuku.setEditable(false);
        jlbuku.setEditable(false);
        psBuku.setEditable(false);
        pnBuku.setEditable(false);
        ttbuku.setEditable(false);
        sbuku.setEditable(false);
        tambah.setEnabled(true);
        jbedit.setEnabled(false);
            
        }
        
        
        
    }//GEN-LAST:event_simpanActionPerformed

    private void tableBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBukuMouseClicked
        // TODO add your handling code here:
        int id = tableBuku.getSelectedRow();
        kdBuku.setText(tableBuku.getValueAt(id, 0).toString());
        jlbuku.setText(tableBuku.getValueAt(id, 1).toString());
        psBuku.setText(tableBuku.getValueAt(id, 2).toString());
        pnBuku.setText(tableBuku.getValueAt(id, 3).toString());
        ttbuku.setText(tableBuku.getValueAt(id, 4).toString());
        sbuku.setText(tableBuku.getValueAt(id, 5).toString());
        jbedit.setEnabled(true);
        cancel.setEnabled(true);
        hapus.setEnabled(true);
        tambah.setEnabled(false);
        
    }//GEN-LAST:event_tableBukuMouseClicked

    private void jbeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbeditActionPerformed
        // TODO add your handling code here:
        edit = true;      
        hapus.setEnabled(false);
        jbedit.setEnabled(false);
        cancel.setEnabled(true);
        simpan.setEnabled(true);
        kdBuku.setEditable(false);
        jlbuku.setEditable(true);
        psBuku.setEditable(true);
        pnBuku.setEditable(true);
        ttbuku.setEditable(true);
        sbuku.setEditable(true);
        jlbuku.requestFocus();
    }//GEN-LAST:event_jbeditActionPerformed

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        // TODO add your handling code here:
        jbedit.setEnabled(true);
        tambah.setEnabled(false);
        cancel.setEnabled(true);
        simpan.setEnabled(true);
        kdBuku.setEditable(false);
        jlbuku.setEditable(true);
        psBuku.setEditable(true);
        pnBuku.setEditable(true);
        ttbuku.setEditable(true);
        sbuku.setEditable(true);
        jlbuku.requestFocus();
    }//GEN-LAST:event_tambahActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        
        jbedit.setEnabled(false);
        tambah.setEnabled(true);
        cancel.setEnabled(false);
        simpan.setEnabled(false);
        kdBuku.setEditable(false);
        jlbuku.setEditable(false);
        psBuku.setEditable(false);
        pnBuku.setEditable(false);
        ttbuku.setEditable(false);
        sbuku.setEditable(false);
        clear();
        data();
        tableBuku.clearSelection();
    }//GEN-LAST:event_cancelActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_perpustakaan", "root", "");
            Statement smt = null;
            String sql = "Delete from buku "+ "Where kode_buku= '"+kdBuku.getText()+"' ";
            smt = connection.createStatement();
            PreparedStatement p2=(PreparedStatement) connection.prepareStatement(sql);
            p2.executeUpdate();
            tampilTable();
            clear();
            data();
            cancel.setEnabled(false);
            jbedit.setEnabled(false);
            tambah.setEnabled(true);
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(daftarBuku.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(daftarBuku.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
    }//GEN-LAST:event_hapusActionPerformed

    private void kdBukuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kdBukuKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_kdBukuKeyTyped

    private void CariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CariActionPerformed
        // TODO add your handling code here:
        String cari = FS.getText();
        if(FS.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, state);
            FS.requestFocus();
        }
        else{
            DefaultTableModel DTM = new DefaultTableModel();
            DTM.addColumn("id_buku");
            DTM.addColumn("kode_buku");
            DTM.addColumn("judul_buku");
            DTM.addColumn("penulis_buku");
            DTM.addColumn("penerbit_buku");
            DTM.addColumn("tahun_terbit");
            DTM.addColumn("stok");
        try {
            String driver = "com.mysql.jdbc.Driver";
            String url="jdbc:mysql://localhost:3306/db_perpustakaan";
            String user = "root";
            String pass= "";
            
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            conec = DriverManager.getConnection(url,user,pass);
            String sql = "select * from buku where judul_buku like '%"+cari+"%'";
            Statement stat = conec.createStatement();
            ResultSet rs = stat.executeQuery(sql);
            while (rs.next()) {
                DTM.addRow(new Object []{rs.getString(1),rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7)});
            }
            tableBuku.setModel(DTM);
            
            kdBuku.setText("");
            jlbuku.setText("");
            sbuku.setText("");
            FS.setEnabled(true);
            FS.requestFocus();
        }   catch (SQLException ex) {
                Logger.getLogger(pinjam.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_CariActionPerformed
boolean edit = false;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(daftarBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(daftarBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(daftarBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(daftarBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                daftarBuku dialog = new daftarBuku(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cari;
    private javax.swing.JTextField FS;
    private javax.swing.JButton cancel;
    private com.k33ptoo.components.KButton hapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbedit;
    private javax.swing.JTextField jlbuku;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private javax.swing.JTextField kdBuku;
    private javax.swing.JTextField pnBuku;
    private javax.swing.JTextField psBuku;
    private javax.swing.JTextField sbuku;
    private com.k33ptoo.components.KButton simpan;
    private javax.swing.JTable tableBuku;
    private javax.swing.JButton tambah;
    private javax.swing.JTextField ttbuku;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tampilan;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mhdha
 */
public class anggota extends javax.swing.JDialog {
    DefaultTableModel dtm;
    PreparedStatement ps;
    private Integer id;
    Connection con;
    Statement state;
    ResultSet res;
    String database;

    /**
     * Creates new form Member_lz
     */
    
    public DefaultTableModel member = new DefaultTableModel();
    public String DDC;
    
    public anggota(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
        show_table();
        tampilTable.setModel(member);
        data();
        TF_kode.setEditable(false);
        TF_nama.requestFocus();
    }

    anggota() {
        
    }
    
    public void clear(){
        TF_kode.setText("");
        TF_nama.setText("");
        CB_jk.setSelectedItem("");
        TF_alamat.setText("");
        TF_pekerjaan.setText("");
        Date clear = null;
        DC_tl.setDate(clear);        
        TF_no.setText("");
        tampilTable.clearSelection();
    }
    
    public void data(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_perpustakaan", "root", "");
            Statement statement = connection.createStatement();
            ResultSet res = statement.executeQuery("select * from member order by kode_member DESC");
            if(res.next()){
                String kd = res.getString("kode_member").substring(1);
                String kode = "00" + (Integer.parseInt(kd)+1);
                TF_kode.setText("M"+kode);
            }else{
                TF_kode.setText("M001");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(anggota.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(anggota.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void show_table() {
        member.setRowCount(0);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_perpustakaan", "root", "");
            state = con.createStatement();
            res = state.executeQuery("SELECT * FROM member ");
            String[] kolom = {"Kode", "Nama", "Jenis_Kelamin", "Tanggal_Lahir", "Pekarjaan ", "No_Telepon", "Alamat"};
            member.setColumnIdentifiers(kolom);
            
            while(res.next()) {
                Object[] data = new Object[7];
                data[0] = res.getString("kode_member");
                data[1] = res.getString("nama_member");
                data[2] = res.getString("jenis_kelamin");
                data[3] = res.getString("tgl_lahir");
                data[4] = res.getString("pekerjaan_member");
                data[5] = res.getString("no_telp_member");
                data[6] = res.getString("alamat_member");
                
                member.addRow(data);
                
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(anggota.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(anggota.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TF_kode = new javax.swing.JTextField();
        TF_nama = new javax.swing.JTextField();
        TF_alamat = new javax.swing.JTextField();
        TF_pekerjaan = new javax.swing.JTextField();
        B_simpan = new javax.swing.JToggleButton();
        B_edit = new javax.swing.JToggleButton();
        B_hapus = new javax.swing.JToggleButton();
        B_cari = new javax.swing.JToggleButton();
        TF_no = new javax.swing.JTextField();
        CB_jk = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tampilTable = new javax.swing.JTable();
        DC_tl = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Form Member");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TF_kode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_kodeActionPerformed(evt);
            }
        });
        getContentPane().add(TF_kode, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, 160, 25));

        TF_nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_namaActionPerformed(evt);
            }
        });
        getContentPane().add(TF_nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, 160, 25));
        getContentPane().add(TF_alamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 198, 160, 25));
        getContentPane().add(TF_pekerjaan, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, 160, 25));

        B_simpan.setText("Simpan");
        B_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_simpanActionPerformed(evt);
            }
        });
        getContentPane().add(B_simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 354, 203, 27));

        B_edit.setText("Edit");
        B_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_editActionPerformed(evt);
            }
        });
        getContentPane().add(B_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 395, 203, 27));

        B_hapus.setText("Hapus");
        B_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_hapusActionPerformed(evt);
            }
        });
        getContentPane().add(B_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 477, 203, 27));

        B_cari.setText("Cari");
        B_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_cariActionPerformed(evt);
            }
        });
        getContentPane().add(B_cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 435, 203, 27));
        getContentPane().add(TF_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, 160, 25));

        CB_jk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laki-laki", "Perempuan" }));
        getContentPane().add(CB_jk, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, 160, -1));

        tampilTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tampilTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tampilTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tampilTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 540, 130));
        getContentPane().add(DC_tl, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 270, 160, -1));

        jButton1.setText("CANCEL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 500, 100, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/suiiii.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TF_namaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_namaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_namaActionPerformed

    private void TF_kodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_kodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_kodeActionPerformed

    private void B_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_simpanActionPerformed
        // TODO add your handling code here:
        String formula = "yyyy-MM-dd";
        SimpleDateFormat format = new SimpleDateFormat(formula);
        DDC = String.valueOf(format.format(DC_tl.getDate()));
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_perpustakaan", "root", "");
            state = null;
            String sql = "INSERT into member (kode_member, nama_member, jenis_kelamin, alamat_member, pekerjaan_member, tgl_lahir, no_telp_member) value ('"+TF_kode.getText()+"', '"+TF_nama.getText()+"', '"+CB_jk.getSelectedItem()+"', '"+TF_alamat.getText()+"', '"+TF_pekerjaan.getText()+"', '"+DDC+"', '"+TF_no.getText()+"')";
            state = con.createStatement();
            ps = con.prepareStatement(sql);
            ps.executeUpdate();
            show_table();
            clear();
            data();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(anggota.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(anggota.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_B_simpanActionPerformed

    private void B_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_editActionPerformed
        // TODO add your handling code here:
        
        String formula = "yyyy-MM-dd";
        SimpleDateFormat format = new SimpleDateFormat(formula);
        DDC = String.valueOf(format.format(DC_tl.getDate()));
        try {
//            String kode = TF_kode.getText();
//            String nama = TF_nama.getText();
//            String alamat = TF_alamat.getText();
            
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_perpustakaan", "root", "");
            state = null;
            ps = con.prepareStatement("UPDATE member SET nama_member = ?, jenis_kelamin = ?, alamat_member = ?, pekerjaan_member = ?, tgl_lahir = ?, no_telp_member = ? WHERE kode_member = ?");
            ps.setString(1, TF_nama.getText());
            ps.setString(2, (String) CB_jk.getSelectedItem());
            ps.setString(3, TF_alamat.getText());
            ps.setString(4, TF_pekerjaan.getText());
            ps.setString(5, DDC);
            ps.setString(6, TF_no.getText());
            ps.setString(7, TF_kode.getText());
            
            ps.executeUpdate();
            show_table();
            clear();
            data();
            JOptionPane.showMessageDialog(this, "berhasil di edit");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(anggota.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(anggota.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_B_editActionPerformed

    private void tampilTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tampilTableMouseClicked
        try {
            // TODO add your handling code here:
            DefaultTableModel dtm = (DefaultTableModel) tampilTable.getModel();
            
            int field = tampilTable.getSelectedRow();
            TF_kode.setText(tampilTable.getValueAt(field, 0).toString());
            TF_nama.setText(tampilTable.getValueAt(field, 1).toString());
            CB_jk.setSelectedItem(tampilTable.getValueAt(field, 2).toString());
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)dtm.getValueAt(field, 3));
            DC_tl.setDate(date);
            TF_pekerjaan.setText(tampilTable.getValueAt(field, 4).toString());
            TF_no.setText(tampilTable.getValueAt(field, 5).toString());
            TF_alamat.setText(tampilTable.getValueAt(field, 6).toString());
            
        } catch (ParseException ex) {
            Logger.getLogger(anggota.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tampilTableMouseClicked

    private void B_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_hapusActionPerformed
        // TODO add your handling code here:
        try {
//            String sql = "DELETE FROM member WHERE kode_member '"+TF_kode.getText()+"'";
            String kode_hapus = TF_kode.getText();
            ps= con.prepareStatement("DELETE FROM member WHERE kode_member = ?");
            ps.setString(1, kode_hapus);
            ps.executeUpdate();
            show_table();
            clear();
            data();
            JOptionPane.showMessageDialog(this, "sukses di hapus");
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "error" + e.getMessage());
        }
    }//GEN-LAST:event_B_hapusActionPerformed

    private void B_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_cariActionPerformed
        // TODO add your handling code here:
        String cari = TF_nama.getText();
        if(TF_nama.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, state);
            TF_nama.requestFocus();
        }
        else{
            DefaultTableModel DTM = new DefaultTableModel();
            DTM.addColumn("id_member");
            DTM.addColumn("kode_member");
            DTM.addColumn("nama_member");
            DTM.addColumn("jenis_kelamin");
            DTM.addColumn("tgl_lahir");
            DTM.addColumn("pekerjaan_member");
            DTM.addColumn("no_telp_member");
            DTM.addColumn("alamat_member");
        try {
            String driver = "com.mysql.jdbc.Driver";
            String url="jdbc:mysql://localhost:3306/db_perpustakaan";
            String user = "root";
            String pass= "";
            
            DriverManager.registerDriver(new com.mysql.jdbc.Driver());
            con = DriverManager.getConnection(url,user,pass);
            String sql = "select * from member where nama_member like '%"+cari+"%'";
            Statement stat = con.createStatement();
            ResultSet rs = stat.executeQuery(sql);
            while (rs.next()) {
                DTM.addRow(new Object []{rs.getString(1),rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8)});
            }
            tampilTable.setModel(DTM);
            
            TF_kode.setText("");
            TF_alamat.setText("");
            TF_pekerjaan.setText("");
            TF_nama.setEnabled(true);
            TF_nama.requestFocus();
        }   catch (SQLException ex) {
                Logger.getLogger(pinjam.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_B_cariActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        clear();
        data();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(anggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(anggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(anggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(anggota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                anggota dialog = new anggota(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton B_cari;
    private javax.swing.JToggleButton B_edit;
    private javax.swing.JToggleButton B_hapus;
    private javax.swing.JToggleButton B_simpan;
    private javax.swing.JComboBox<String> CB_jk;
    private com.toedter.calendar.JDateChooser DC_tl;
    private javax.swing.JTextField TF_alamat;
    private javax.swing.JTextField TF_kode;
    private javax.swing.JTextField TF_nama;
    private javax.swing.JTextField TF_no;
    private javax.swing.JTextField TF_pekerjaan;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tampilTable;
    // End of variables declaration//GEN-END:variables
}
